library ieee;
use ieee.std_logic_1164.all;

entity Shameem_03_06_22_Four_Bit_Full_AdderSub is
	port (
		Prajith_opCode : in std_logic;
		Prajith_A, Prajith_B : in std_logic_vector(3 downto 0);
		Prajith_sum : out std_logic_vector(3 downto 0);
		Prajith_Carry, Prajith_overflow : out std_logic);
end Shameem_03_06_22_Four_Bit_Full_AdderSub;


architecture arch of Shameem_03_06_22_Four_Bit_Full_AdderSub is

component Shameem_03_06_22_Full_Adder
	port (Prajith_A, Prajith_B, Prajit_Cin : in std_logic;
			Prajith_Sum, Prajith_Cout : out std_logic);
end component;

signal prajith_cout, prajith_tmp : std_logic_vector(3 downto 0);
begin
	prajith_tmp(0) <= Prajith_B(0) xor Prajith_opCode;
	ASFA1 : Shameem_03_06_22_Full_Adder port map (Prajith_A(0), prajith_tmp(0), Prajith_opCode, Prajith_sum(0), 
		prajith_cout(0));
		
	prajith_tmp(1) <= Prajith_B(1) xor Prajith_opCode;
	ASFA2 : Shameem_03_06_22_Full_Adder port map (Prajith_A(1), prajith_tmp(1), prajith_cout(0), Prajith_sum(1), 
		prajith_cout(1));
		
	prajith_tmp(2) <= Prajith_B(2) xor Prajith_opCode;
	ASFA3 : Shameem_03_06_22_Full_Adder port map (Prajith_A(2), prajith_tmp(2), prajith_cout(1), Prajith_sum(2), 
		prajith_cout(2));
		
	prajith_tmp(3) <= Prajith_B(3) xor Prajith_opCode;
	ASFA4 : Shameem_03_06_22_Full_Adder port map (Prajith_A(3), prajith_tmp(3), prajith_cout(2), Prajith_sum(3), 
		prajith_cout(3));
	Prajith_Carry <= prajith_cout(3);
	Prajith_overflow <= prajith_cout(3) xor prajith_cout(2);
end arch;